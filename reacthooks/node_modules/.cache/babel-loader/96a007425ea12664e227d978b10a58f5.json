{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactprojects\\\\firstapp\\\\reacthooks\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  // let count = 0;\n  // var incremented;\n  const [count, setCount] = useState(0);\n\n  const IncNum = () => {\n    console.log(\"Clicked\");\n    s; // count = incremented;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: IncNum,\n      children: \" Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/reactprojects/firstapp/reacthooks/src/App.jsx"],"names":["React","useState","App","count","setCount","IncNum","console","log","s"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;;AACA,QAAMI,MAAM,GAAG,MAAM;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,IAAAA,CAAC,CAFgB,CAGjB;AACH,GAJD;;AAKA,sBACI;AAAA,4BACI;AAAA,sBAAML,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAfD;;GAAMH,G;;KAAAA,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    // let count = 0;\r\n    // var incremented;\r\n    const [count, setCount] = useState(0);\r\n    const IncNum = () => {\r\n        console.log(\"Clicked\")\r\n        s\r\n        // count = incremented;\r\n    };\r\n    return (\r\n        <>\r\n            <h1> {count} </h1>\r\n            <button onClick={IncNum}> Click me</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}