{"ast":null,"code":"var _jsxFileName = \"E:\\\\reactprojects\\\\firstapp\\\\reacthooks\\\\src\\\\App.jsx\";\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  var _s = $RefreshSig$();\n\n  let count = 0; // var incremented;\n\n  const IncNum = () => {\n    _s();\n\n    const state = useState();\n    console.log(\"Clicked\");\n    count++; // count = incremented;\n  };\n\n  _s(IncNum, \"TB5q0vVTSBe3rtUyWC7Zc0y6MUY=\");\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", count, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: IncNum,\n      children: \" Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/reactprojects/firstapp/reacthooks/src/App.jsx"],"names":["React","useState","App","count","IncNum","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAQA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,MAAIC,KAAK,GAAG,CAAZ,CADc,CAEd;;AACA,QAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,UAAMC,KAAK,GAAGJ,QAAQ,EAAtB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAJ,IAAAA,KAAK,GAHY,CAIjB;AACH,GALD;;AAHc,KAGRC,MAHQ;;AASd,sBACI;AAAA,4BACI;AAAA,sBAAMD,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAMH,CAfD;;KAAMF,G;AAiBN,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App = () => {\r\n    let count = 0;\r\n    // var incremented;\r\n    const IncNum = () => {\r\n        const state = useState();\r\n        console.log(\"Clicked\")\r\n        count++;\r\n        // count = incremented;\r\n    };\r\n    return (\r\n        <>\r\n            <h1> {count} </h1>\r\n            <button onClick={IncNum}> Click me</button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}